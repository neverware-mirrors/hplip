From 140d7f37d4cf3ab85ddb437d5a722ef44e5e6438 Mon Sep 17 00:00:00 2001
From: Till Kamppeter <till.kamppeter@gmail.com>
Date: Fri, 22 Jul 2016 09:33:03 +0200
Subject: Make sure that the HPLIP components which access the USB (especially
 the CUPS backends "hp" and "hpfax") do not crash when libusb fails to connect
 to the USB, for example on machines without USB or with the USB kernel
 modules not loaded

LP: #1302437

Patch-Name: musb-c-do-not-crash-on-usb-failure.patch
---
 io/hpmud/musb.c | 32 +++++++++++++++++++++-----------
 1 file changed, 21 insertions(+), 11 deletions(-)

diff --git a/io/hpmud/musb.c b/io/hpmud/musb.c
index 6e99c15c8..fe5d50f95 100644
--- a/io/hpmud/musb.c
+++ b/io/hpmud/musb.c
@@ -695,7 +695,8 @@ static libusb_device *get_libusb_device(const char *uri)
     int numdevs = 0;        /* number of connected devices */
     int i, conf, iface, altset ;
 
-    libusb_init(&libusb_ctx);
+    i = libusb_init(&libusb_ctx);
+    if (i) goto bugout;
     numdevs = libusb_get_device_list(libusb_ctx, &libusb_dev_list);
     for (i=0; i< numdevs; i++)
     {
@@ -2054,7 +2055,8 @@ int __attribute__ ((visibility ("hidden"))) musb_probe_devices(char *lst, int ls
     char serial[128], mfg[128], sz[HPMUD_LINE_SIZE];
     int r, size=0;
 
-    libusb_init(&ctx);
+    i = libusb_init(&ctx);
+    if (i) goto bugout;
     numdevs = libusb_get_device_list(ctx, &list);
 
     if (numdevs <= 0)
@@ -2155,12 +2157,14 @@ int __attribute__ ((visibility ("hidden"))) musb_probe_devices(char *lst, int ls
     }//end for loop
 
 bugout:
-    if (!hd)
+    if (hd)
         libusb_close(hd);
     if (confptr)
         libusb_free_config_descriptor(confptr);
-    libusb_free_device_list(list, 1);
-    libusb_exit(ctx);
+    if (list)
+      libusb_free_device_list(list, 1);
+    if (ctx)
+      libusb_exit(ctx);
 
     return size;
 }
@@ -2186,7 +2190,8 @@ enum HPMUD_RESULT hpmud_make_usb_uri(const char *busnum, const char *devnum, cha
 
     *bytes_read=0;
 
-    libusb_init(&ctx);
+    i = libusb_init(&ctx);
+    if (i) goto bugout;
     numdevs = libusb_get_device_list(ctx, &list);
 
     if (numdevs <= 0)
@@ -2289,8 +2294,10 @@ bugout:
     if (hd != NULL)
         libusb_close(hd);
 
-    libusb_free_device_list(list, 1);
-    libusb_exit(ctx);
+    if (list)
+      libusb_free_device_list(list, 1);
+    if (ctx)
+      libusb_exit(ctx);
 
     return stat;
 }
@@ -2309,7 +2316,8 @@ enum HPMUD_RESULT hpmud_make_usb_serial_uri(const char *sn, char *uri, int uri_s
 
     *bytes_read=0;
 
-    libusb_init(&ctx);
+    i = libusb_init(&ctx);
+    if (i) goto bugout;
     numdevs = libusb_get_device_list(ctx, &list);
 
     if (numdevs <= 0)
@@ -2335,8 +2343,10 @@ enum HPMUD_RESULT hpmud_make_usb_serial_uri(const char *sn, char *uri, int uri_s
     stat = HPMUD_R_OK;
 
 bugout:
-    libusb_free_device_list(list, 1);
-    libusb_exit(ctx);
+    if (list)
+      libusb_free_device_list(list, 1);
+    if (ctx)
+      libusb_exit(ctx);
 
     return stat;
 }
